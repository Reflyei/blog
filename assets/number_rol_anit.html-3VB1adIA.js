import{_ as a,c as p,e,b as t,r as o,o as l}from"./app-DZFtogLw.js";const c={};function i(u,n){const s=o("Animate");return l(),p("div",null,[e(s),n[0]||(n[0]=t(`<p><br>核心代码</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">   <span class="token comment">// 旧数字，用于展示过程</span></span>
<span class="line">    <span class="token keyword">const</span> odv <span class="token operator">=</span> old_val<span class="token punctuation">.</span>value</span>
<span class="line">    <span class="token comment">// 总共动画时长</span></span>
<span class="line">    <span class="token keyword">const</span> duration <span class="token operator">=</span> <span class="token number">1000</span></span>
<span class="line">    <span class="token comment">// 每一步的时间间隔 </span></span>
<span class="line">    <span class="token keyword">const</span> stepTime <span class="token operator">=</span> <span class="token number">50</span></span>
<span class="line">    <span class="token comment">// 总步数</span></span>
<span class="line">    <span class="token keyword">const</span> step_count <span class="token operator">=</span> duration <span class="token operator">/</span> stepTime</span>
<span class="line">    <span class="token comment">// 新值和旧值的差</span></span>
<span class="line">    <span class="token keyword">const</span> diff_count <span class="token operator">=</span> newVal <span class="token operator">-</span> odv</span>
<span class="line">    <span class="token comment">// 每一步增加的值 </span></span>
<span class="line">    <span class="token keyword">const</span> every_step_num <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>diff_count <span class="token operator">/</span> step_count<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">let</span> count <span class="token operator">=</span> odv</span>
<span class="line">    <span class="token keyword">const</span> inverLoop <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">        count <span class="token operator">+=</span> every_step_num<span class="token punctuation">;</span> <span class="token keyword">const</span> <span class="token function-variable function">finish</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">            count <span class="token operator">=</span> newVal<span class="token punctuation">;</span></span>
<span class="line">            old_val<span class="token punctuation">.</span>value <span class="token operator">=</span> count<span class="token punctuation">;</span></span>
<span class="line">            <span class="token function">clearInterval</span><span class="token punctuation">(</span>inverLoop<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span>    <span class="token comment">// 新值更大时，当超过或等于新值时停止  </span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>every_step_num <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> count <span class="token operator">&gt;=</span> newVal<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token function">finish</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>    <span class="token comment">// 当旧值更大时，小于等于新值时停止 </span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>every_step_num <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> count <span class="token operator">&lt;=</span> newVal<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token function">finish</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span></span>
<span class="line">        jump_count<span class="token punctuation">.</span>value <span class="token operator">=</span> count</span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span> stepTime<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2))])}const k=a(c,[["render",i],["__file","number_rol_anit.html.vue"]]),d=JSON.parse('{"path":"/docs/qianduan/donghuaxiangguan/wenzidongxiao/number_rol_anit.html","title":"数字滚动动画","lang":"en-US","frontmatter":{"title":"数字滚动动画","date":"2025/03/03"},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"filePathRelative":"docs/前端/动画相关/文字动效/number_rol_anit.md"}');export{k as comp,d as data};
